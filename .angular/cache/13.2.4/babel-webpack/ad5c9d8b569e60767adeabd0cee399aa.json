{"ast":null,"code":"import { __awaiter } from \"tslib\";\nimport { Question } from 'src/app/models/question.model';\nimport { IcfesTest } from 'src/app/models/test.model';\nimport { FinalScore } from 'src/app/models/finalScore.model';\nimport { environment } from 'src/environments/environment';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../../../services/question.service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"../../../services/grade.service\";\nimport * as i4 from \"../../header/header.component\";\nimport * as i5 from \"../../timer/timer.component\";\nimport * as i6 from \"@angular/material/card\";\nimport * as i7 from \"@angular/common\";\nimport * as i8 from \"../questions/multiple-selection-question/multiple-selection-question.component\";\nimport * as i9 from \"@angular/material/button\";\nimport * as i10 from \"@angular/material/progress-bar\";\nimport * as i11 from \"../summary-test/summary-test.component\";\nconst _c0 = [\"circleProgress\"];\n\nfunction IcfesTestComponent_div_7_app_multiple_selection_question_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"app-multiple-selection-question\", 14);\n  }\n\n  if (rf & 2) {\n    const ctx_r4 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"question\", ctx_r4.currentQuestion);\n  }\n}\n\nfunction IcfesTestComponent_div_7_div_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"div\");\n  }\n}\n\nfunction IcfesTestComponent_div_7_ng_template_4_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r12 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"button\", 15);\n    i0.ɵɵlistener(\"click\", function IcfesTestComponent_div_7_ng_template_4_Template_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r12);\n      const ctx_r11 = i0.ɵɵnextContext(2);\n      return ctx_r11.previousAction();\n    });\n    i0.ɵɵtext(1, \"ATRAS \");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction IcfesTestComponent_div_7_ng_template_6_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r15 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"button\", 16, 10);\n    i0.ɵɵlistener(\"click\", function IcfesTestComponent_div_7_ng_template_6_Template_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r15);\n      const ctx_r14 = i0.ɵɵnextContext(2);\n      return ctx_r14.previousAction();\n    });\n    i0.ɵɵtext(2, \"ATRAS \");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction IcfesTestComponent_div_7_div_15_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 17)(1, \"p\");\n    i0.ɵɵtext(2, \"\\u00A1Olvidaste responder alguna pregunta! - Vuelve y revisa\");\n    i0.ɵɵelementEnd()();\n  }\n}\n\nfunction IcfesTestComponent_div_7_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r17 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtemplate(1, IcfesTestComponent_div_7_app_multiple_selection_question_1_Template, 1, 1, \"app-multiple-selection-question\", 7);\n    i0.ɵɵelement(2, \"br\");\n    i0.ɵɵtemplate(3, IcfesTestComponent_div_7_div_3_Template, 1, 0, \"div\", 8);\n    i0.ɵɵtemplate(4, IcfesTestComponent_div_7_ng_template_4_Template, 2, 0, \"ng-template\", null, 9, i0.ɵɵtemplateRefExtractor);\n    i0.ɵɵtemplate(6, IcfesTestComponent_div_7_ng_template_6_Template, 3, 0, \"ng-template\", null, 10, i0.ɵɵtemplateRefExtractor);\n    i0.ɵɵelementStart(8, \"button\", 11);\n    i0.ɵɵlistener(\"click\", function IcfesTestComponent_div_7_Template_button_click_8_listener() {\n      i0.ɵɵrestoreView(_r17);\n      const ctx_r16 = i0.ɵɵnextContext();\n      return ctx_r16.nextAction();\n    });\n    i0.ɵɵtext(9);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(10, \"br\")(11, \"br\")(12, \"mat-progress-bar\", 12)(13, \"br\")(14, \"br\");\n    i0.ɵɵtemplate(15, IcfesTestComponent_div_7_div_15_Template, 3, 0, \"div\", 13);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const _r6 = i0.ɵɵreference(5);\n\n    const _r8 = i0.ɵɵreference(7);\n\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.currentQuestion.questionType == \"multiple-selection\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.currentTest.questions.indexOf(ctx_r1.currentQuestion) > 0)(\"ngIfThen\", _r6)(\"ngIfElse\", _r8);\n    i0.ɵɵadvance(6);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r1.nextAndSend, \"\");\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"value\", ctx_r1.currentTest.progress);\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.alert);\n  }\n}\n\nfunction IcfesTestComponent_div_8_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\")(1, \"h1\", 18);\n    i0.ɵɵtext(2, \" Lo sentimos, actualmente no tenemos preguntas del modulo\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(3, \"img\", 19);\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction IcfesTestComponent_div_9_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵelement(1, \"app-summary-test\", 20);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r3 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"icfesTest\", ctx_r3.currentTest);\n  }\n}\n\nexport let IcfesTestComponent = /*#__PURE__*/(() => {\n  class IcfesTestComponent {\n    constructor(questionsService, route, gradeService) {\n      this.questionsService = questionsService;\n      this.route = route;\n      this.gradeService = gradeService;\n      this.endPoint = 'question';\n      this.questionCount = -1;\n      this.lengthArrayQ = -1;\n      this.loadCurrentTest();\n      this.nextAndSend = 'Siguiente';\n      this.finalScore = new FinalScore();\n    }\n\n    loadCurrentTest() {\n      return __awaiter(this, void 0, void 0, function* () {\n        const testId = yield this.route.snapshot.params.testId;\n        const moduleId = yield this.route.snapshot.params.moduleId;\n        this.currentTest = new IcfesTest();\n        this.currentTest.progress = 0;\n        this.listarQuestions(testId, moduleId);\n      });\n    }\n\n    calculateProgressIncrement() {\n      this.progressIncrement = 100 / this.currentTest.questions.length;\n    }\n\n    ngOnInit() {\n      this.msgHeader = environment.msgHeader;\n    }\n\n    listarQuestions(testId, moduleId) {\n      if (testId !== 'random') {\n        this.request = this.questionsService.getTestById(testId);\n      } else {\n        this.request = this.questionsService.getRandomQuestionsByModuleId(moduleId);\n      }\n\n      this.request.subscribe(data => {\n        for (let item of data.questions) {\n          const objTmp = new Question(item.statement, item.answers, item.questionType, item.feedback);\n          this.currentTest.questions.push(objTmp);\n        }\n\n        this.lengthArrayQ = this.currentTest.questions.length;\n        this.calculateProgressIncrement();\n        this.nextAction();\n      }, err => {});\n    }\n\n    nextAction() {\n      if (this.questionCount == this.currentTest.questions.length - 2) {\n        this.nextAndSend = 'ENVIAR';\n      }\n\n      if (this.questionCount < this.currentTest.questions.length - 1) {\n        this.currentTest.progress += this.progressIncrement;\n        this.currentQuestion = this.currentTest.questions[++this.questionCount];\n      } else {\n        if (this.verifyAnswers()) {\n          const timeTests = this.test.stopper();\n          console.log(\"Bonus Win (points) -- > \", timeTests);\n          this.currentTest.calculateQtyCorrectQuestions();\n          const emailSession = sessionStorage.getItem('emailSession');\n          const idTest = this.route.snapshot.params.testId;\n          const idModule = this.route.snapshot.params.moduleId;\n          const finalScore = this.currentTest.qtyCorrectQuestions;\n          const date = new Date();\n          console.log(\"Fechaaaaaaaa -- > \", date.toString());\n          this.finalScore.userId = emailSession;\n          this.finalScore.testId = idTest;\n          this.finalScore.moduleId = idModule;\n          this.finalScore.score = finalScore;\n          this.finalScore.time = timeTests.toString();\n          this.finalScore.date = date.toString();\n          console.log(\"Objeto -> \", this.finalScore);\n          this.gradeService.postScore(this.finalScore);\n          this.testEnded = true;\n        } else {\n          this.alert = true;\n        }\n      }\n    }\n\n    previousAction() {\n      this.currentTest.progress -= this.progressIncrement;\n      this.currentQuestion = this.currentTest.questions[--this.questionCount];\n      this.alert = false;\n    }\n\n    verifyAnswers() {\n      let accept = true;\n      this.currentTest.questions.forEach(element => {\n        if (element.selectedAnswer.length === 0) {\n          accept = false;\n        }\n      });\n      return accept;\n    }\n\n  }\n\n  IcfesTestComponent.ɵfac = function IcfesTestComponent_Factory(t) {\n    return new (t || IcfesTestComponent)(i0.ɵɵdirectiveInject(i1.QuestionsService), i0.ɵɵdirectiveInject(i2.ActivatedRoute), i0.ɵɵdirectiveInject(i3.GradeService));\n  };\n\n  IcfesTestComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: IcfesTestComponent,\n    selectors: [[\"app-icfes-test\"]],\n    viewQuery: function IcfesTestComponent_Query(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵviewQuery(_c0, 5);\n      }\n\n      if (rf & 2) {\n        let _t;\n\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.test = _t.first);\n      }\n    },\n    decls: 10,\n    vars: 4,\n    consts: [[3, \"title\"], [1, \"row\"], [1, \"comp-card\"], [\"circleProgress\", \"\"], [\"id\", \"center-card\", 1, \"example-card\"], [1, \"col-xl-12\", \"col-md-6\"], [4, \"ngIf\"], [3, \"question\", 4, \"ngIf\"], [4, \"ngIf\", \"ngIfThen\", \"ngIfElse\"], [\"activeButton\", \"\"], [\"disableButton\", \"\"], [\"mat-button\", \"\", \"color\", \"accent\", 1, \"mat-raised-button\", 3, \"click\"], [\"name\", \"progressBar\", \"mode\", \"determinate\", 3, \"value\"], [\"class\", \"alert\", 4, \"ngIf\"], [3, \"question\"], [\"mat-button\", \"\", \"color\", \"primary\", 1, \"mat-raised-button\", 3, \"click\"], [\"mat-button\", \"\", \"color\", \"primary\", \"disabled\", \"\", 1, \"mat-raised-button\", 3, \"click\"], [1, \"alert\"], [1, \"title\"], [\"src\", \"../../../../assets/images/QuestionWarning.png\", 1, \"image\"], [3, \"icfesTest\"]],\n    template: function IcfesTestComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelement(0, \"app-header\", 0);\n        i0.ɵɵelementStart(1, \"div\", 1)(2, \"div\", 2);\n        i0.ɵɵelement(3, \"serpro-timer\", null, 3);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(5, \"mat-card\", 4)(6, \"div\", 5);\n        i0.ɵɵtemplate(7, IcfesTestComponent_div_7_Template, 16, 7, \"div\", 6);\n        i0.ɵɵtemplate(8, IcfesTestComponent_div_8_Template, 4, 0, \"div\", 6);\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(9, IcfesTestComponent_div_9_Template, 2, 1, \"div\", 6);\n        i0.ɵɵelementEnd()();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵpropertyInterpolate(\"title\", ctx.msgHeader);\n        i0.ɵɵadvance(7);\n        i0.ɵɵproperty(\"ngIf\", ctx.currentTest && !ctx.testEnded && ctx.currentQuestion);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.lengthArrayQ == 0);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.testEnded);\n      }\n    },\n    directives: [i4.HeaderComponent, i5.TimerComponent, i6.MatCard, i7.NgIf, i8.MultipleSelectionQuestionComponent, i9.MatButton, i10.MatProgressBar, i11.SummaryTestComponent],\n    styles: [\"body[_ngcontent-%COMP%]{background-image:url();background-repeat:no-repeat;background-attachment:fixed;background-size:cover}.example-card[_ngcontent-%COMP%]{max-width:800px;align-content:center;align-items:center}.comp-card[_ngcontent-%COMP%]{margin-left:80px;margin-right:center;width:20px;align-content:center;padding-top:5%}#center-card[_ngcontent-%COMP%]{margin-left:auto;margin-right:auto}.title[_ngcontent-%COMP%]{text-align:center}.image[_ngcontent-%COMP%]{display:block;width:20%;margin-left:auto;margin-right:auto}.alert[_ngcontent-%COMP%]{font-style:italic;font-size:medium;margin-left:8%;margin-right:8%;padding-top:2%;padding-bottom:1%;text-align:center;background-color:#ff000054}\"]\n  });\n  return IcfesTestComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}