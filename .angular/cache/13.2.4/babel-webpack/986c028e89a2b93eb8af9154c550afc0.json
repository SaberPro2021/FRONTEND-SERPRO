{"ast":null,"code":"import { __awaiter } from \"tslib\";\nimport { environment } from 'src/environments/environment';\nimport { ChartType } from 'angular-google-charts';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/services/question.service\";\nimport * as i2 from \"src/app/services/login.service\";\nimport * as i3 from \"src/app/services/grade.service\";\nimport * as i4 from \"../header/header.component\";\nimport * as i5 from \"@angular/common\";\nimport * as i6 from \"@ng-bootstrap/ng-bootstrap\";\nimport * as i7 from \"angular-google-charts\";\n\nfunction ProfileComponent_tr_12_td_3_div_1_img_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"img\", 13);\n  }\n}\n\nfunction ProfileComponent_tr_12_td_3_div_1_img_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"img\", 14);\n  }\n}\n\nfunction ProfileComponent_tr_12_td_3_div_1_img_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"img\", 15);\n  }\n}\n\nfunction ProfileComponent_tr_12_td_3_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 9);\n    i0.ɵɵtemplate(1, ProfileComponent_tr_12_td_3_div_1_img_1_Template, 1, 0, \"img\", 10);\n    i0.ɵɵtemplate(2, ProfileComponent_tr_12_td_3_div_1_img_2_Template, 1, 0, \"img\", 11);\n    i0.ɵɵtemplate(3, ProfileComponent_tr_12_td_3_div_1_img_3_Template, 1, 0, \"img\", 12);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r11 = i0.ɵɵnextContext();\n    const indice_r5 = ctx_r11.index;\n    const star_r4 = ctx_r11.$implicit;\n    const ind_r2 = i0.ɵɵnextContext().index;\n    const ctx_r6 = i0.ɵɵnextContext();\n    i0.ɵɵpropertyInterpolate(\"ngbTooltip\", ctx_r6.matrixDescriptionModuleTest[ind_r2][indice_r5]);\n    i0.ɵɵproperty(\"ngSwitch\", star_r4);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngSwitchCase\", 0);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngSwitchCase\", 1);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngSwitchCase\", 2);\n  }\n}\n\nfunction ProfileComponent_tr_12_td_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"td\");\n    i0.ɵɵtemplate(1, ProfileComponent_tr_12_td_3_div_1_Template, 4, 5, \"div\", 8);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const indice_r5 = ctx.index;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", indice_r5 > 0);\n  }\n}\n\nfunction ProfileComponent_tr_12_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\")(1, \"td\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(3, ProfileComponent_tr_12_td_3_Template, 2, 1, \"td\", 5);\n    i0.ɵɵelementStart(4, \"td\");\n    i0.ɵɵelement(5, \"div\", 6);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(6, \"td\");\n    i0.ɵɵelement(7, \"google-chart\", 7);\n    i0.ɵɵelementEnd()();\n  }\n\n  if (rf & 2) {\n    const item_r1 = ctx.$implicit;\n    const ind_r2 = ctx.index;\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(ctx_r0.matrixDescriptionModuleTest[ind_r2][0]);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", item_r1);\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"type\", ctx_r0.myType)(\"data\", ctx_r0.myData);\n  }\n}\n\nexport let ProfileComponent = /*#__PURE__*/(() => {\n  class ProfileComponent {\n    constructor(questionServices, loginService, gradeService, virtualcontainer) {\n      //private resolver: ComponentFactoryResolver) {\n      this.questionServices = questionServices;\n      this.loginService = loginService;\n      this.gradeService = gradeService;\n      this.virtualcontainer = virtualcontainer;\n      this.matrixModuleTest = [];\n      this.matrixDescriptionModuleTest = [];\n      this.arrayModulesSession = [];\n      this.arrayTestsSession = [];\n      this.myType = 'PieChart';\n      this.myData = [['London', 8136000], ['New York', 8538000], ['Paris', 2244000], ['Berlin', 3470000], ['Kairo', 19500000]];\n      this.chart = {\n        options: {\n          width: 100,\n          height: 100,\n          greenFrom: 75,\n          greenTo: 100,\n          redFrom: 0,\n          redTo: 50,\n          yellowFrom: 50,\n          yellowTo: 75,\n          minorTicks: 5\n        }\n      };\n      this.dataAcum = [];\n      this.listarModulos();\n      this.contarModulos();\n      google.charts.load('current', {\n        'packages': ['gauge']\n      });\n      this.userName = sessionStorage.getItem('userNameSession');\n      this.email = sessionStorage.getItem('emailSession');\n      this.image = sessionStorage.getItem('imageSession'); //console.log(\"s\", this.qtyModules.contarModulos())   \n\n      this.sessionStored = loginService.lastSession(this.email);\n      this.sessionStored.subscribe(dataS => {\n        if (dataS[0] != null) {\n          this.arrayModulesSession = dataS[0].modules.slice();\n          this.arrayTestsSession = dataS[0].tests.slice();\n        }\n\n        this.modules.subscribe(dataM => __awaiter(this, void 0, void 0, function* () {\n          for (let i = 0; i < dataM.length; i++) {\n            //console.log(\"Modules:\",data[index]._id);  \n            let arrayTests = new Array();\n            let arrayTestsDesc = new Array();\n            if (this.arrayModulesSession.includes(dataM[i]._id)) arrayTests.push(1);else arrayTests.push(0);\n            arrayTestsDesc.push(dataM[i].knowledgeArea); //the character ; identifies request from profile\n\n            this.tests = this.questionServices.getTestsByModuleId(dataM[i]._id + \";\");\n            this.tests.subscribe(dataT => __awaiter(this, void 0, void 0, function* () {\n              for (let j = 0; j < dataT.length; j++) {\n                if (this.arrayTestsSession.includes(dataT[j]._id)) arrayTests.push(2);else arrayTests.push(0);\n                arrayTestsDesc.push(dataT[j].description); //console.log(data[index]._id,\"<*Modules/Test*>\",data1[j]._id);\n              }\n\n              for (let index = 0; arrayTests.length <= environment.maxTestsDrawProfile; index++) {\n                arrayTests.push(-1);\n              }\n\n              this.matrixModuleTest.push(arrayTests);\n              this.matrixDescriptionModuleTest.push(arrayTestsDesc);\n            }));\n            gradeService.getScoreByModule(this.email).subscribe(data => __awaiter(this, void 0, void 0, function* () {\n              this.dataAcum = [];\n\n              for (let k = 0; k < data.length; k++) if (data[k]._id == dataM[i]._id) {\n                this.dataAcum.push(['%', data[k].sum / data[k].count]); //google.charts.setOnLoadCallback(drawChart);    \n                //const Factory = this.resolver.resolveComponentFactory(GoogleChartComponent);\n\n                this.googleGauge.type = ChartType.Gauge;\n                this.googleGauge.options = this.chart.options;\n                this.googleGauge.data = this.dataAcum;\n                const componentRef = this.virtualcontainer.createComponent(this.googleGauge);\n                console.log(\"-->\", this.googleGauge.data);\n              }\n            }));\n          }\n        }));\n      }); //console.log(\"Matrix\", this.matrixModuleTest)\n      //console.log(\"Matrix\", this.matrixDescriptionModuleTest) \n    }\n\n    listarModulos() {\n      this.modules = this.questionServices.getAllModules();\n    }\n\n    contarModulos() {\n      this.resultCount = Object.keys(this.modules).length; //console.log(\"Number count modules\",this.resultCount );\n    }\n\n    ngOnInit() {\n      this.msgHeader = environment.msgHeader;\n    }\n\n  }\n\n  ProfileComponent.ɵfac = function ProfileComponent_Factory(t) {\n    return new (t || ProfileComponent)(i0.ɵɵdirectiveInject(i1.QuestionsService), i0.ɵɵdirectiveInject(i2.LoginService), i0.ɵɵdirectiveInject(i3.GradeService), i0.ɵɵdirectiveInject(i0.ViewContainerRef));\n  };\n\n  ProfileComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: ProfileComponent,\n    selectors: [[\"serpro-profile\"]],\n    decls: 13,\n    vars: 2,\n    consts: [[3, \"title\"], [1, \"row\", \"justify-content-center\"], [1, \"col-lg-8\"], [1, \"cardMaster\"], [1, \"table\"], [4, \"ngFor\", \"ngForOf\"], [\"id\", \"chart_div\"], [3, \"type\", \"data\"], [3, \"ngSwitch\", \"ngbTooltip\", 4, \"ngIf\"], [3, \"ngSwitch\", \"ngbTooltip\"], [\"src\", \"../../../../assets/images/star-0.png\", 4, \"ngSwitchCase\"], [\"src\", \"../../../../assets/images/star-1.png\", 4, \"ngSwitchCase\"], [\"src\", \"../../../../assets/images/star-2.png\", 4, \"ngSwitchCase\"], [\"src\", \"../../../../assets/images/star-0.png\"], [\"src\", \"../../../../assets/images/star-1.png\"], [\"src\", \"../../../../assets/images/star-2.png\"]],\n    template: function ProfileComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelement(0, \"app-header\", 0);\n        i0.ɵɵelementStart(1, \"div\", 1)(2, \"div\", 2)(3, \"div\", 3)(4, \"table\", 4)(5, \"thead\")(6, \"tr\")(7, \"th\");\n        i0.ɵɵtext(8, \"M\\u00D3DULO\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(9, \"th\");\n        i0.ɵɵtext(10, \"TESTS\");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(11, \"tbody\");\n        i0.ɵɵtemplate(12, ProfileComponent_tr_12_Template, 8, 4, \"tr\", 5);\n        i0.ɵɵelementEnd()()()()();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵpropertyInterpolate(\"title\", ctx.msgHeader);\n        i0.ɵɵadvance(12);\n        i0.ɵɵproperty(\"ngForOf\", ctx.matrixModuleTest);\n      }\n    },\n    directives: [i4.HeaderComponent, i5.NgForOf, i5.NgIf, i5.NgSwitch, i6.NgbTooltip, i5.NgSwitchCase, i7.GoogleChartComponent],\n    styles: [\"#parent[_ngcontent-%COMP%]{margin:0%;padding:1%;width:100%;height:100%}.cardMaster[_ngcontent-%COMP%]{height:100%;width:100%;display:grid;grid-template-columns:100%}#profileTarget[_ngcontent-%COMP%]{margin:15% auto auto;justify-content:center;text-align:center}#profileImage[_ngcontent-%COMP%]{margin-top:20%;margin-bottom:15%;height:200px;width:200px}.advance[_ngcontent-%COMP%]{border-style:double;border:solid;border-radius:5%;padding:5%}table[_ngcontent-%COMP%]{font-family:arial,sans-serif;font-size:large;border-collapse:collapse;width:100%}@media (max-width: 650px){.cardMaster[_ngcontent-%COMP%]{height:80%;display:white;grid-template-columns:100%}#profileImage[_ngcontent-%COMP%]{margin-top:5%;margin-bottom:15%;height:200px;width:200px}#profileTarget[_ngcontent-%COMP%]{margin:5% auto auto;justify-content:center;text-align:center}}[_ngcontent-%COMP%]::-webkit-scrollbar{background-color:#fff;width:16px}[_ngcontent-%COMP%]::-webkit-scrollbar-track{background-color:#fff}[_ngcontent-%COMP%]::-webkit-scrollbar-thumb{background-color:#babac0;border-radius:16px;border:4px solid #fff}[_ngcontent-%COMP%]::-webkit-scrollbar-button{display:none}#content[_ngcontent-%COMP%]{height:90px;width:100%;display:inline-flex;overflow-y:auto;overflow-x:auto}img[_ngcontent-%COMP%]{height:60px}.cupContain[_ngcontent-%COMP%]{width:100px;height:50px;margin:0;padding:7;display:inline-block}td[_ngcontent-%COMP%], tr[_ngcontent-%COMP%]{vertical-align:middle}\"]\n  });\n  return ProfileComponent;\n})();\n\nfunction drawChart() {\n  var data = google.visualization.arrayToDataTable([['Label', 'Value'], ['Memory', 80], ['Network', 68]]);\n  var options = {\n    width: 400,\n    height: 120,\n    redFrom: 90,\n    redTo: 100,\n    yellowFrom: 75,\n    yellowTo: 90,\n    minorTicks: 5\n  };\n  var chart = new google.visualization.Gauge(document.getElementById('chart_div'));\n  chart.draw(data, options);\n  setInterval(function () {\n    data.setValue(1, 1, 40 + Math.round(60 * Math.random()));\n    chart.draw(data, options);\n  }, 5000);\n  setInterval(function () {\n    data.setValue(2, 1, 60 + Math.round(20 * Math.random()));\n    chart.draw(data, options);\n  }, 26000);\n}","map":null,"metadata":{},"sourceType":"module"}